下面四个选项中，均是不合法的用户标识符的选项是（）
A
A P_0 do
B
float la0 _A
C
b-a sizeof int
D
b_a temp _123

标示符是由数字，字母和下划线组成，但标示符的第一个字符必须是字母或者下划线。

c语言的标示符分为三类：

1，关键字，如：int,static等等，具有特定的含义，不能做他用。

2，预定义标示符，如：库函数的名字（像printf,putchar等等）和预编译处理命令（像define,include等），为了避免误解，建议用户不要将这些做他用。

3，用户标示符，由用户自定，但不能与关键字和预定义标示符相同。还应做到“见名知义”。

最后，在标示符中，大小写字母代表不同的意思！

（1）关键字，如int，float等不可以作为标识符
（2）预定义标示符如printf，define不可以做标识符
（3）字母数字下划线组成，且开头必须为字母或者下划线     



下面四个选项中，均是正确的数值常量或字符常量的选项是（）

A
0.0 0f 8.9e ‘&'
B
"a" 3.9e-2.5 lel ‘\”’
C
’3' 011 0xff00 0a
D
+001 0xabcd 2e2
正确答案：D
你的答案：A
官方解析：
【解释】A中0f、8.9e是非法的数值常量；B中“a”是字符串常量，是非法的数值常量

或字符常量；C中0a是非法的数值常量；D中均是合法的数值常量；所以选择D。


  1. 0开头表示0后面的数为8进制（本身不是数值的组成部分；如0x 11223344,0x只表示后面的数值为16进制数），而a~f是属于16进制表示中的，所以0f这样的写法是非法的。
 2. 双引号代表字符串常量，单引号代表字符常量
 3. 科学计数法的形式为 <小数部分>e<整数部分>；e后面不可以为小数，但可以为负数
 4. \"为转义字符，为特殊的字符常量。


下面函数的输出结果是（）
void func() {
    int k = 1^(1 << 31 >> 31);
    printf("%d\n", k);
}
A
0
B
-1
C
-2
D
1
正确答案：C

首先要清楚几个概念：
 
 
\	正数	负数 
原码	最高位表示符号，其余位存储该数绝对值的二进制值	同正数原码定义
反码	同原码	符号位不变，其他位取反
补码	同原码	反码+1
 
注意：

 
 
符号位：0代表正数，1代表负数。 
计算机中加减运算均使用补码。 
 
分析：
 
 
int
int 为有符号整数，以 32 位存储，因此1的二进制表示为：

 
00000000 00000000 00000000 00000001
 
1<<31
将所有数整体向左移31位，溢出的数直接舍去，右侧补0。即：

 
10000000 00000000 00000000 00000000
 
()>>31
将所有数整体向右移31位，左侧补符号位数字。即：

 
11111111 11111111 11111111 11111111
 
1^()
异或运算，得

 
11111111 11111111 11111111 11111110
此时符号位为1，代表次数为负数。因为计算机中加减运算使用的都是补码，所以不能直接将补码形式二进制数通过除二取余法转换为十进制数。要先将补码转换为原码，再通过除二取余法转换为十进制数。

 
负数补码转换为原码步骤：

 
 
补码-1，得反码：
11111111 11111111 11111111 11111101
 
反码除符号位其余位取反，得原码：
10000000 00000000 00000000 00000010
 
 
最后，将原码使用除二取余法转换为十进制数，为-2。
故选C。
